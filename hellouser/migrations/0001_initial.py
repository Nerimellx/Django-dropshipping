# Generated by Django 2.0.4 on 2018-09-10 13:52

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('address', models.CharField(default='', max_length=100, verbose_name='Адрес')),
                ('address_optional', models.CharField(blank=True, default='', max_length=100, verbose_name='Дополнительный Адрес')),
                ('country', models.CharField(default='', max_length=100, verbose_name='Страна')),
                ('city', models.CharField(default='', max_length=100, verbose_name='Город')),
                ('zip', models.CharField(default='', max_length=100, verbose_name='Почтовый индекс')),
                ('shipping_address_optional', models.CharField(blank=True, default='', max_length=100, verbose_name='Дополнительный Адрес отправки')),
                ('shipping_address', models.CharField(blank=True, default='', max_length=100, verbose_name='Адрес отправки')),
                ('shipping_country', models.CharField(blank=True, default='', max_length=100, verbose_name='Страна отправки')),
                ('shipping_city', models.CharField(blank=True, default='', max_length=100, verbose_name='Город отправки')),
                ('shipping_zip', models.CharField(blank=True, default='', max_length=100, verbose_name='Почтовый индекс отправки')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(default='', max_length=255)),
                ('name', models.CharField(default='', max_length=255, verbose_name='Имя')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, verbose_name='Телефон')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('lat', models.DecimalField(blank=True, decimal_places=7, default=0, max_digits=9, null=True, verbose_name='Широта')),
                ('lon', models.DecimalField(blank=True, decimal_places=7, default=0, max_digits=10, null=True, verbose_name='Долгота')),
            ],
            options={
                'verbose_name': 'Заказчик',
                'verbose_name_plural': 'Заказчики',
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='FreightPackingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(default='', max_length=255)),
                ('name', models.CharField(default='', max_length=255, unique=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Транспортная упаковка',
                'verbose_name_plural': 'Транспортные упаковки',
                'db_table': 'transport_packaging',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(default='', max_length=255)),
                ('sku', models.CharField(default='', max_length=255, verbose_name='SKU')),
                ('article', models.CharField(default='', max_length=255, verbose_name='Артикул товара')),
                ('brand', models.CharField(default='', max_length=255, verbose_name='Бренд')),
                ('name', models.CharField(default='', max_length=255, verbose_name='Название товара')),
                ('weight', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, verbose_name='Вес единицы')),
                ('width', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, verbose_name='Ширина единицы')),
                ('height', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, verbose_name='Высота единицы')),
                ('length', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, verbose_name='Длина единицы')),
                ('description', models.CharField(blank=True, default='', max_length=512, verbose_name='Описание товара')),
                ('receiver', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='hellouser.Customers', verbose_name='Получатель груза (покупатель)')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'db_table': 'products',
            },
        ),
        migrations.CreateModel(
            name='Suppliers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(default='', max_length=255)),
                ('name', models.CharField(default='', max_length=255, verbose_name='Имя')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, verbose_name='Телефон')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('lat', models.DecimalField(blank=True, decimal_places=7, default=0, max_digits=9, null=True, verbose_name='Широта')),
                ('lon', models.DecimalField(blank=True, decimal_places=7, default=0, max_digits=10, null=True, verbose_name='Долгота')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'db_table': 'suppliers',
            },
        ),
        migrations.CreateModel(
            name='Waybill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(default='', max_length=255)),
                ('number', models.CharField(default='', max_length=255, unique=True, verbose_name='Номер документа')),
                ('editable', models.BooleanField(default=True, verbose_name='Документ может редактирвоаться')),
                ('waybill_description', models.CharField(blank=True, default='', max_length=512, verbose_name='Описание состава отправления')),
                ('consignor', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='hellouser.Suppliers', verbose_name='Отправитель груза (поставщик)')),
                ('receiver', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='hellouser.Customers', verbose_name='Получатель груза (покупатель)')),
            ],
            options={
                'verbose_name': 'ТТН',
                'verbose_name_plural': 'ТТН',
                'db_table': 'waybill',
            },
        ),
        migrations.CreateModel(
            name='WaybillFreightPacking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(default='', max_length=255)),
                ('row_number', models.IntegerField(verbose_name='Номер строки в документе')),
                ('parent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='hellouser.Waybill', verbose_name='Документ, владелец табличной части')),
            ],
            options={
                'verbose_name': 'Транспортная упаковка в ТТН',
                'verbose_name_plural': 'Транспортные упаковки в ТТН',
                'db_table': 'waybill_freight_packing',
            },
        ),
        migrations.CreateModel(
            name='WaybillProducts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(default='', max_length=255)),
                ('row_number', models.IntegerField(verbose_name='Номер строки в документе')),
                ('price_value', models.DecimalField(decimal_places=5, default=0, max_digits=15, verbose_name='Цена товара')),
                ('quantity', models.DecimalField(decimal_places=5, default=0, max_digits=15, verbose_name='Количество товара')),
                ('parent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='hellouser.Waybill', verbose_name='Документ, владелец табличной части')),
                ('product', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='hellouser.Products', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Товар в ТТН',
                'verbose_name_plural': 'Товары в ТТН',
                'db_table': 'waybill_products',
            },
        ),
    ]
