# -*- coding: utf-8 -*-
# Generated by Django 1.11.12 on 2018-09-13 07:53
from __future__ import unicode_literals

import ckeditor_uploader.fields
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('number', phonenumber_field.modelfields.PhoneNumberField(default='', max_length=128, verbose_name='Телефон')),
                ('address', models.CharField(default='', max_length=100, verbose_name='Адрес')),
                ('address_optional', models.CharField(blank=True, default='', max_length=100, verbose_name='Дополнительный Адрес')),
                ('country', models.CharField(default='', max_length=100, verbose_name='Страна')),
                ('city', models.CharField(default='', max_length=100, verbose_name='Город')),
                ('zip', models.CharField(default='', max_length=100, verbose_name='Почтовый индекс')),
                ('shipping_address_optional', models.CharField(blank=True, default='', max_length=100, verbose_name='Дополнительный Адрес отправки')),
                ('shipping_address', models.CharField(blank=True, default='', max_length=100, verbose_name='Адрес отправки')),
                ('shipping_country', models.CharField(blank=True, default='', max_length=100, verbose_name='Страна отправки')),
                ('shipping_city', models.CharField(blank=True, default='', max_length=100, verbose_name='Город отправки')),
                ('shipping_zip', models.CharField(blank=True, default='', max_length=100, verbose_name='Почтовый индекс отправки')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcceptFPUnknownDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('number', models.CharField(default='', max_length=20, unique=True, verbose_name='Номер документа')),
                ('block', models.CharField(choices=[('ALL', 'Разрешено для всех'), ('NBD', 'Запрещено всем'), ('ADM', 'Разрешено только администраторам')], default='ALL', max_length=3, verbose_name='Редактирование документа')),
                ('status', models.CharField(choices=[('SV', 'Сохранен'), ('PR', 'Проведен'), ('MD', 'Помечен на удаление')], default='SV', max_length=2, verbose_name='Статус документа')),
                ('date_doc', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата документа')),
            ],
            options={
                'verbose_name': 'Приемка неидентифицированных мест по ТТН',
                'verbose_name_plural': 'Приемки неидентифицированных мест по ТТН',
                'db_table': 'accept_fp_unknown',
            },
        ),
        migrations.CreateModel(
            name='AcceptFPUnknownTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('row_number', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('code', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('qty', models.IntegerField(default=1, verbose_name='Количество')),
                ('doc', models.ForeignKey(help_text='Документ, в табличной части, которого данное место', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accept_fp_unknown', to='hellouser.AcceptFPUnknownDoc', verbose_name='Документ')),
            ],
            options={
                'verbose_name': 'Неидентифицированное место в ТТН',
                'verbose_name_plural': 'Неидентифицированные места в ТТН',
                'db_table': 'accept_fp_unknown_table',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('contractor_type', models.CharField(choices=[('PP', 'Частное лицо'), ('CO', 'Компания'), ('IE', 'Частный предприниматель')], default='PP', help_text='<details><ul><li>Частное лицо: заполняем ФИО, ИНН - не обязательно. Наименование  = ФИО</li><li>Частный предприниматель: заполняем ФИО, ИНН, полное наименование. Наименование  = ФИО (СПД-ФЛ)</li><li>Компания: заполняем Наименование, Полное наименование, ИНН, ЕГРПОУ</li></ul></details>', max_length=2, verbose_name='Тип контрагента')),
                ('first_name', models.CharField(blank=True, default='', max_length=20, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, default='', max_length=40, verbose_name='Фамилия')),
                ('name', models.CharField(default='', help_text='<details>Название контрагента, используемое внутри предприятия. Например, покупатель может называться<br><b>"Публичное акционерное общество Автотранспортное предприятие 12981",</b><br>но обычно его назвают <b>"АТП-12981".</b>Это и должно быть указано в наименовании.<br>Юридическое название указывайте в поле "Полное наименование"</details>', max_length=40, verbose_name='Наименование')),
                ('name_legal', models.CharField(blank=True, default='', help_text='<details>Юридическое название компании, частного или индивидуального предпринимателя.<br>Для Частный лиц указывайте ФИО полностью<br>Это поле используется при формировании печатных форм документов</details>', max_length=255, verbose_name='Полное наименование')),
                ('tax_number', models.CharField(blank=True, default='', help_text='<details>для других страни или не используется или как-то иначе называется</details>', max_length=20, verbose_name='ИНН')),
                ('accounting_number', models.CharField(blank=True, default='', help_text='<details>для других страни или не используется или как-то иначе называется</details>', max_length=20, verbose_name='ЕГРПОУ')),
            ],
            options={
                'verbose_name': 'Предприятие',
                'verbose_name_plural': 'Предприятия',
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('hellouser_company', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hellouser_config_hellouser_company', to='hellouser.Company', verbose_name='Основное предприятие')),
            ],
            options={
                'verbose_name': 'Конфигурация',
                'verbose_name_plural': 'Конфигурации',
                'db_table': 'config',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('name', models.CharField(default='', help_text='Навзвание страны', max_length=40, verbose_name='Наименование')),
                ('abbr_alpha_2', models.CharField(blank=True, default='', help_text='Двухбуквенный код', max_length=2, null=True, unique=True, verbose_name='Alpha-2')),
                ('abbr_alpha_3', models.CharField(blank=True, default='', help_text='Трехбуквенный код', max_length=3, null=True, unique=True, verbose_name='Alpha-3')),
                ('abbr_digit_3', models.CharField(blank=True, default='', help_text='Цифровой код', max_length=3, null=True, unique=True, verbose_name='Код')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'db_table': 'country',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('name', models.CharField(default='', max_length=25, unique=True, verbose_name='Название')),
                ('iso_code', models.CharField(default='', help_text='Международный цифровой код валюты. Например: доллар США - 840, евро - 978.', max_length=4, unique=True, verbose_name='ISO код')),
                ('abbr', models.CharField(default='', max_length=4, unique=True, verbose_name='ISO аббр')),
                ('simbol', models.CharField(default='', help_text='Международный буквенный код валюты. Например: доллар США - USD, евро - EUR.', max_length=4, unique=True, verbose_name='Символ')),
                ('hidden', models.BooleanField(default=False, help_text='Если признак установлен - пользователи видят и могут использоваться данную валюту.', verbose_name='Отображение покупателям')),
            ],
            options={
                'verbose_name': 'Валюта',
                'verbose_name_plural': 'Валюты',
                'db_table': 'currency',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('contractor_type', models.CharField(choices=[('PP', 'Частное лицо'), ('CO', 'Компания'), ('IE', 'Частный предприниматель')], default='PP', help_text='<details><ul><li>Частное лицо: заполняем ФИО, ИНН - не обязательно. Наименование  = ФИО</li><li>Частный предприниматель: заполняем ФИО, ИНН, полное наименование. Наименование  = ФИО (СПД-ФЛ)</li><li>Компания: заполняем Наименование, Полное наименование, ИНН, ЕГРПОУ</li></ul></details>', max_length=2, verbose_name='Тип контрагента')),
                ('first_name', models.CharField(blank=True, default='', max_length=20, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, default='', max_length=40, verbose_name='Фамилия')),
                ('name', models.CharField(default='', help_text='<details>Название контрагента, используемое внутри предприятия. Например, покупатель может называться<br><b>"Публичное акционерное общество Автотранспортное предприятие 12981",</b><br>но обычно его назвают <b>"АТП-12981".</b>Это и должно быть указано в наименовании.<br>Юридическое название указывайте в поле "Полное наименование"</details>', max_length=40, verbose_name='Наименование')),
                ('name_legal', models.CharField(blank=True, default='', help_text='<details>Юридическое название компании, частного или индивидуального предпринимателя.<br>Для Частный лиц указывайте ФИО полностью<br>Это поле используется при формировании печатных форм документов</details>', max_length=255, verbose_name='Полное наименование')),
                ('tax_number', models.CharField(blank=True, default='', help_text='<details>для других страни или не используется или как-то иначе называется</details>', max_length=20, verbose_name='ИНН')),
                ('accounting_number', models.CharField(blank=True, default='', help_text='<details>для других страни или не используется или как-то иначе называется</details>', max_length=20, verbose_name='ЕГРПОУ')),
                ('country', models.ForeignKey(help_text='Страна происхождения контрагента', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.Country', verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Покупатель',
                'verbose_name_plural': 'Покупатели',
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='FPIdentified',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Вес')),
                ('width', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Ширина')),
                ('height', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Высота')),
                ('length', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Длина')),
                ('barcode', models.CharField(default='', max_length=32, verbose_name='Штрихкод')),
            ],
            options={
                'verbose_name': 'Идентифицированное (обмеряное) место',
                'verbose_name_plural': 'Идентифицированные (обмеряные) места',
                'db_table': 'freight_packing',
            },
        ),
        migrations.CreateModel(
            name='FreightPackingType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('name', models.CharField(default='', help_text='Название типа упаковки. Например, ящик, мешок, бочка', max_length=40, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип места',
                'verbose_name_plural': 'Типы мест',
                'db_table': 'freight_packing_type',
            },
        ),
        migrations.CreateModel(
            name='InspectFPDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('number', models.CharField(default='', max_length=20, unique=True, verbose_name='Номер документа')),
                ('block', models.CharField(choices=[('ALL', 'Разрешено для всех'), ('NBD', 'Запрещено всем'), ('ADM', 'Разрешено только администраторам')], default='ALL', max_length=3, verbose_name='Редактирование документа')),
                ('status', models.CharField(choices=[('SV', 'Сохранен'), ('PR', 'Проведен'), ('MD', 'Помечен на удаление')], default='SV', max_length=2, verbose_name='Статус документа')),
                ('date_doc', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата документа')),
            ],
            options={
                'verbose_name': 'Обмер мест и расклейка ШК по ТТН',
                'verbose_name_plural': 'Обмеры мест и расклейка ШК по ТТН',
                'db_table': 'inspect_fp',
            },
        ),
        migrations.CreateModel(
            name='InspectFPTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('row_number', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('code', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('on_pallet', models.BooleanField(default=False, help_text='Если признак установлен - место пришло в виде паллеты.', verbose_name='На паллете?')),
                ('doc', models.ForeignKey(help_text='Документ, в табличной части, которого данное место', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inspect_fp', to='hellouser.InspectFPDoc', verbose_name='Документ')),
                ('fp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='hellouser.FPIdentified', verbose_name='Транспортное место (идент.)')),
            ],
            options={
                'verbose_name': 'Идентифицированное место в ТТН',
                'verbose_name_plural': 'Идентифицированные места в ТТН',
                'db_table': 'inspect_fp_table',
            },
        ),
        migrations.CreateModel(
            name='InspectProductDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('number', models.CharField(default='', max_length=20, unique=True, verbose_name='Номер документа')),
                ('block', models.CharField(choices=[('ALL', 'Разрешено для всех'), ('NBD', 'Запрещено всем'), ('ADM', 'Разрешено только администраторам')], default='ALL', max_length=3, verbose_name='Редактирование документа')),
                ('status', models.CharField(choices=[('SV', 'Сохранен'), ('PR', 'Проведен'), ('MD', 'Помечен на удаление')], default='SV', max_length=2, verbose_name='Статус документа')),
                ('date_doc', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата документа')),
                ('fp', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='hellouser.FPIdentified', verbose_name='Транспортное место (идент.)')),
            ],
            options={
                'verbose_name': 'Проверка товара',
                'verbose_name_plural': 'Проверка товаров',
                'db_table': 'inspect_product',
            },
        ),
        migrations.CreateModel(
            name='InspectProductTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('row_number', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('code', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('resume', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Резюме по тестированию')),
                ('doc', models.ForeignKey(help_text='Документ, в табличной части, которого данное место', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='inspect_product', to='hellouser.InspectProductDoc', verbose_name='Документ')),
            ],
            options={
                'verbose_name': 'Проверенный товар в ТТН',
                'verbose_name_plural': 'Проверенные товары в ТТН',
                'db_table': 'inspect_product_table',
            },
        ),
        migrations.CreateModel(
            name='OrderDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('number', models.CharField(default='', max_length=20, unique=True, verbose_name='Номер документа')),
                ('block', models.CharField(choices=[('ALL', 'Разрешено для всех'), ('NBD', 'Запрещено всем'), ('ADM', 'Разрешено только администраторам')], default='ALL', max_length=3, verbose_name='Редактирование документа')),
                ('status', models.CharField(choices=[('SV', 'Сохранен'), ('PR', 'Проведен'), ('MD', 'Помечен на удаление')], default='SV', max_length=2, verbose_name='Статус документа')),
                ('date_doc', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата документа')),
                ('check_product', models.BooleanField(default=False, verbose_name='Проверить товар в заказе')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='OrderProductTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('row_number', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('code', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('qty', models.FloatField(default=1, verbose_name='Количество')),
                ('HS_code', models.CharField(blank=True, default='', help_text='Код ТН ВЭД', max_length=50, verbose_name='HS-код')),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Вес')),
                ('width', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Ширина')),
                ('height', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Высота')),
                ('length', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Длина')),
                ('barcode', models.CharField(blank=True, default='', max_length=32, verbose_name='Штрихкод')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Цена')),
                ('doc', models.ForeignKey(help_text='Документ, в табличной части, которого данный товар', null=True, on_delete=django.db.models.deletion.CASCADE, to='hellouser.OrderDoc', verbose_name='Документ')),
            ],
            options={
                'verbose_name': 'Товар в заказе',
                'verbose_name_plural': 'Товары в заказах',
                'db_table': 'order_product',
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, verbose_name='Телефон')),
                ('object_id', models.PositiveIntegerField(verbose_name='Название')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Тип контрагента')),
            ],
            options={
                'verbose_name': 'Телефоны',
                'verbose_name_plural': 'Телефоны пользователей',
                'db_table': 'telephones',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('sku', models.CharField(blank=True, default='', help_text='Код номенклатуры, используемый во внутреннем учете. Иногда называют Карточкой складского учета.', max_length=50, null=True, verbose_name='SKU')),
                ('article', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Артикул товара')),
                ('brand', models.CharField(blank=True, default='', help_text='Бренд или производитель товара', max_length=50, null=True, verbose_name='Бренд товара')),
                ('name', models.CharField(default='', max_length=150, verbose_name='Название товара')),
                ('HS_code', models.CharField(blank=True, default='', help_text='Код ТН ВЭД', max_length=50, null=True, verbose_name='HS-код')),
                ('primary_package_weight', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Вес первичной упаковки')),
                ('primary_package_width', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Ширина первичной упаковки')),
                ('primary_package_height', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Высота первичной упаковки')),
                ('primary_package_length', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Длина первичной упаковки')),
                ('primary_package_barcode', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Штрихкод первичной упаковки')),
                ('primary_package_index', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество во вторичной упаковке')),
                ('group_package_weight', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Вес вторичной упаковки')),
                ('group_package_width', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Ширина вторичной упаковки')),
                ('group_package_height', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Высота вторичной упаковки')),
                ('group_package_length', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Длина вторичной упаковки')),
                ('group_package_barcode', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Штрихкод вторичной упаковки')),
                ('group_package_index', models.IntegerField(blank=True, default=0, null=True, verbose_name='Количество в транспортной упаковке')),
                ('transport_package_weight', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Вес транспортной упаковки')),
                ('transport_package_width', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Ширина транспортной упаковки')),
                ('transport_package_height', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Высота транспортной упаковки')),
                ('transport_package_length', models.DecimalField(blank=True, decimal_places=3, default=0, max_digits=15, null=True, verbose_name='Длина транспортной упаковки')),
                ('transport_package_barcode', models.CharField(blank=True, default='', max_length=32, null=True, verbose_name='Штрихкод транспортной упаковки')),
                ('how_to_test', ckeditor_uploader.fields.RichTextUploadingField(blank=True, verbose_name='Что и как тестировать')),
                ('customer', models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='hellouser.Customer', verbose_name='Покупатель')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'db_table': 'product',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('contractor_type', models.CharField(choices=[('PP', 'Частное лицо'), ('CO', 'Компания'), ('IE', 'Частный предприниматель')], default='PP', help_text='<details><ul><li>Частное лицо: заполняем ФИО, ИНН - не обязательно. Наименование  = ФИО</li><li>Частный предприниматель: заполняем ФИО, ИНН, полное наименование. Наименование  = ФИО (СПД-ФЛ)</li><li>Компания: заполняем Наименование, Полное наименование, ИНН, ЕГРПОУ</li></ul></details>', max_length=2, verbose_name='Тип контрагента')),
                ('first_name', models.CharField(blank=True, default='', max_length=20, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, default='', max_length=40, verbose_name='Фамилия')),
                ('name', models.CharField(default='', help_text='<details>Название контрагента, используемое внутри предприятия. Например, покупатель может называться<br><b>"Публичное акционерное общество Автотранспортное предприятие 12981",</b><br>но обычно его назвают <b>"АТП-12981".</b>Это и должно быть указано в наименовании.<br>Юридическое название указывайте в поле "Полное наименование"</details>', max_length=40, verbose_name='Наименование')),
                ('name_legal', models.CharField(blank=True, default='', help_text='<details>Юридическое название компании, частного или индивидуального предпринимателя.<br>Для Частный лиц указывайте ФИО полностью<br>Это поле используется при формировании печатных форм документов</details>', max_length=255, verbose_name='Полное наименование')),
                ('tax_number', models.CharField(blank=True, default='', help_text='<details>для других страни или не используется или как-то иначе называется</details>', max_length=20, verbose_name='ИНН')),
                ('accounting_number', models.CharField(blank=True, default='', help_text='<details>для других страни или не используется или как-то иначе называется</details>', max_length=20, verbose_name='ЕГРПОУ')),
                ('country', models.ForeignKey(help_text='Страна происхождения контрагента', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.Country', verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'db_table': 'supplier',
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('name', models.CharField(default='', help_text='Название единицы. Например, штука, кг, упаковка', max_length=40, verbose_name='Название единицы')),
                ('iso_code', models.CharField(default='', help_text='Штука - 796, Килограмм - 166 ', max_length=4, unique=True, verbose_name='ISO код')),
                ('int_code', models.CharField(default='', help_text='Штука - pc, Килограмм - kg', max_length=4, unique=True, verbose_name='ISO код')),
            ],
            options={
                'verbose_name': 'Единица измерения',
                'verbose_name_plural': 'Единицы измерений',
                'db_table': 'unit',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('name', models.CharField(blank=True, default='', help_text='Название склада', max_length=40, verbose_name='Наименование')),
                ('country', models.ForeignKey(help_text='Страна, где находится склад', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.Country', verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
                'db_table': 'warehouse',
            },
        ),
        migrations.CreateModel(
            name='WayBillDoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('number', models.CharField(default='', max_length=20, unique=True, verbose_name='Номер документа')),
                ('block', models.CharField(choices=[('ALL', 'Разрешено для всех'), ('NBD', 'Запрещено всем'), ('ADM', 'Разрешено только администраторам')], default='ALL', max_length=3, verbose_name='Редактирование документа')),
                ('status', models.CharField(choices=[('SV', 'Сохранен'), ('PR', 'Проведен'), ('MD', 'Помечен на удаление')], default='SV', max_length=2, verbose_name='Статус документа')),
                ('date_doc', models.DateTimeField(default=datetime.datetime.now, verbose_name='Дата документа')),
                ('check_product', models.BooleanField(default=False, verbose_name='Проверить товар')),
                ('consignor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.Supplier', verbose_name='Отправитель')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.OrderDoc', verbose_name='Заказ')),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.Customer', verbose_name='Получатель')),
            ],
            options={
                'verbose_name': 'ТТН',
                'verbose_name_plural': 'ТТН',
                'db_table': 'waybill',
            },
        ),
        migrations.CreateModel(
            name='WayBillProductTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('row_number', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('code', models.IntegerField(default=0, verbose_name='Номер строки')),
                ('qty', models.FloatField(default=1, verbose_name='Количество')),
                ('HS_code', models.CharField(blank=True, default='', help_text='Код ТН ВЭД', max_length=50, verbose_name='HS-код')),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Вес')),
                ('width', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Ширина')),
                ('height', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Высота')),
                ('length', models.DecimalField(decimal_places=3, default=0, max_digits=15, verbose_name='Длина')),
                ('barcode', models.CharField(blank=True, default='', max_length=32, verbose_name='Штрихкод')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Прайс')),
                ('doc', models.ForeignKey(help_text='Документ, в табличной части, которого данный товар', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='waybill_product', to='hellouser.WayBillDoc', verbose_name='Документ')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hellouser.Product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Товар в ТТН',
                'verbose_name_plural': 'Товары в ТТН',
                'db_table': 'waybill_product',
            },
        ),
        migrations.CreateModel(
            name='WayBillStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True)),
                ('source', models.CharField(blank=True, default='', max_length=180)),
                ('desc', models.CharField(blank=True, default='', max_length=255, verbose_name='Комментарий')),
                ('created_by', models.CharField(blank=True, default='', max_length=180)),
                ('code', models.CharField(default='', max_length=20, verbose_name='Сервис-код контрагента')),
                ('object_id', models.PositiveIntegerField(null=True, verbose_name='ID регистратора')),
                ('dt', models.DateTimeField(default=datetime.datetime.now, help_text='Дата регистрации записи. Должна быть равна дате документа регистратора', verbose_name='Дата регистрации')),
                ('status', models.CharField(choices=[('WB_AD', 'ТТН проведена в системе'), ('FP_AD', 'Приняты места (не проверены)'), ('FP_CD', 'Места проверены и обмеряны'), ('PR_WC', 'Ожидается проверка товара'), ('PR_CD', 'Товар проверен'), ('RD_SH', 'Товар готов к отправке')], default='', help_text='Статус ТТН - изменяется документами. <details>Разные документы, добавляют разные статус, один документ может добавлять два и более различных статуса в зависимости от условий.</details>', max_length=5, verbose_name='Статус ТТН')),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Тип регистратора')),
                ('wb', models.ForeignKey(help_text='ТТН, по которой изменился статус', null=True, on_delete=django.db.models.deletion.CASCADE, to='hellouser.WayBillDoc', verbose_name='ТТН')),
            ],
            options={
                'verbose_name': 'Статус ТТН',
                'verbose_name_plural': 'Статусы ТТН',
                'db_table': 'waybill_status',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='manufacturer',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, to='hellouser.Supplier', verbose_name='Производитель(поставщик)'),
        ),
        migrations.AddField(
            model_name='orderproducttable',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hellouser.Product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='orderdoc',
            name='consignor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.Supplier', verbose_name='Отправитель'),
        ),
        migrations.AddField(
            model_name='orderdoc',
            name='currency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.Currency', verbose_name='Валюта документа'),
        ),
        migrations.AddField(
            model_name='orderdoc',
            name='receiver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.Customer', verbose_name='Получатель'),
        ),
        migrations.AddField(
            model_name='inspectproducttable',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hellouser.Product', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='inspectfpdoc',
            name='wb',
            field=models.ForeignKey(help_text='ТТН, по которой обмеряем места', on_delete=django.db.models.deletion.PROTECT, related_name='inspect_fp_wb', to='hellouser.WayBillDoc', verbose_name='ТТН'),
        ),
        migrations.AddField(
            model_name='fpidentified',
            name='fp_type',
            field=models.ForeignKey(help_text='Идентифицированное транспортное место, для которого уже заданы весогабаритные размеры и штрихкод', null=True, on_delete=django.db.models.deletion.CASCADE, to='hellouser.FreightPackingType', verbose_name='Транспортное место'),
        ),
        migrations.AddField(
            model_name='config',
            name='hellouser_currency',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hellouser_config_hellouser_currency', to='hellouser.Currency', verbose_name='Основная валюта'),
        ),
        migrations.AddField(
            model_name='config',
            name='national_currency',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hellouser_config_national_currency', to='hellouser.Currency', verbose_name='Национальная валюта'),
        ),
        migrations.AddField(
            model_name='config',
            name='unit_default',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hellouser_config_hellouser_unit', to='hellouser.Unit', verbose_name='Единица изменения по умолчанию'),
        ),
        migrations.AddField(
            model_name='company',
            name='country',
            field=models.ForeignKey(help_text='Страна происхождения контрагента', null=True, on_delete=django.db.models.deletion.SET_NULL, to='hellouser.Country', verbose_name='Страна'),
        ),
        migrations.AddField(
            model_name='acceptfpunknowntable',
            name='fp_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='hellouser.FreightPackingType', verbose_name='Транспортное место'),
        ),
        migrations.AddField(
            model_name='acceptfpunknowndoc',
            name='wb',
            field=models.ForeignKey(help_text='ТТН, по которой пересчитываем неидентифицированные места', on_delete=django.db.models.deletion.PROTECT, related_name='accept_fp_wb', to='hellouser.WayBillDoc', verbose_name='ТТН'),
        ),
        migrations.AlterUniqueTogether(
            name='waybillproducttable',
            unique_together=set([('doc', 'product', 'row_number')]),
        ),
        migrations.AlterUniqueTogether(
            name='orderproducttable',
            unique_together=set([('doc', 'product', 'row_number')]),
        ),
        migrations.AlterUniqueTogether(
            name='inspectfptable',
            unique_together=set([('doc', 'fp')]),
        ),
        migrations.AlterUniqueTogether(
            name='acceptfpunknowntable',
            unique_together=set([('doc', 'fp_type', 'row_number')]),
        ),
    ]
